**F*************.**F***************.***************F***************.***************************FFFFF...........................................F*FFFFFFFFFFFFFFFF

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) ClientsController GET #index assigns all clients as @clients
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:40

  2) ClientsController GET #show assigns the requested client as @client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:48

  3) ClientsController GET #edit assigns the requested client as @client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:63

  4) ClientsController POST #create with valid params creates a new Client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:72

  5) ClientsController POST #create with valid params assigns a newly created client as @client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:78

  6) ClientsController POST #create with valid params redirects to the created client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:84

  7) ClientsController POST #create with invalid params assigns a newly created but unsaved client as @client
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/clients_controller_spec.rb:91

  8) ClientsController POST #create with invalid params re-renders the 'new' template
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/clients_controller_spec.rb:96

  9) ClientsController PUT #update with valid params updates the requested client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:109

  10) ClientsController PUT #update with valid params assigns the requested client as @client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:116

  11) ClientsController PUT #update with valid params redirects to the client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:122

  12) ClientsController PUT #update with invalid params assigns the client as @client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:130

  13) ClientsController PUT #update with invalid params re-renders the 'edit' template
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:136

  14) ClientsController DELETE #destroy destroys the requested client
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:145

  15) ClientsController DELETE #destroy redirects to the clients list
     # Add a hash of attributes valid for your model
     # ./spec/controllers/clients_controller_spec.rb:152

  16) ProfilesController GET #index assigns all profiles as @profiles
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:41

  17) ProfilesController GET #show assigns the requested profile as @profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:49

  18) ProfilesController GET #edit assigns the requested profile as @profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:64

  19) ProfilesController POST #create with valid params creates a new Profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:73

  20) ProfilesController POST #create with valid params assigns a newly created profile as @profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:79

  21) ProfilesController POST #create with valid params redirects to the created profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:85

  22) ProfilesController POST #create with invalid params assigns a newly created but unsaved profile as @profile
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/profiles_controller_spec.rb:92

  23) ProfilesController POST #create with invalid params re-renders the 'new' template
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/profiles_controller_spec.rb:97

  24) ProfilesController PUT #update with valid params updates the requested profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:110

  25) ProfilesController PUT #update with valid params assigns the requested profile as @profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:117

  26) ProfilesController PUT #update with valid params redirects to the profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:123

  27) ProfilesController PUT #update with invalid params assigns the profile as @profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:131

  28) ProfilesController PUT #update with invalid params re-renders the 'edit' template
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:137

  29) ProfilesController DELETE #destroy destroys the requested profile
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:146

  30) ProfilesController DELETE #destroy redirects to the profiles list
     # Add a hash of attributes valid for your model
     # ./spec/controllers/profiles_controller_spec.rb:153

  31) ProjectMapsController GET #index assigns all project_maps as @project_maps
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:40

  32) ProjectMapsController GET #show assigns the requested project_map as @project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:48

  33) ProjectMapsController GET #edit assigns the requested project_map as @project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:63

  34) ProjectMapsController POST #create with valid params creates a new ProjectMap
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:72

  35) ProjectMapsController POST #create with valid params assigns a newly created project_map as @project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:78

  36) ProjectMapsController POST #create with valid params redirects to the created project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:84

  37) ProjectMapsController POST #create with invalid params assigns a newly created but unsaved project_map as @project_map
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:91

  38) ProjectMapsController POST #create with invalid params re-renders the 'new' template
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:96

  39) ProjectMapsController PUT #update with valid params updates the requested project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:109

  40) ProjectMapsController PUT #update with valid params assigns the requested project_map as @project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:116

  41) ProjectMapsController PUT #update with valid params redirects to the project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:122

  42) ProjectMapsController PUT #update with invalid params assigns the project_map as @project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:130

  43) ProjectMapsController PUT #update with invalid params re-renders the 'edit' template
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:136

  44) ProjectMapsController DELETE #destroy destroys the requested project_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:145

  45) ProjectMapsController DELETE #destroy redirects to the project_maps list
     # Add a hash of attributes valid for your model
     # ./spec/controllers/project_maps_controller_spec.rb:152

  46) ProjectsController GET #index assigns all projects as @projects
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:40

  47) ProjectsController GET #show assigns the requested project as @project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:48

  48) ProjectsController GET #edit assigns the requested project as @project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:63

  49) ProjectsController POST #create with valid params creates a new Project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:72

  50) ProjectsController POST #create with valid params assigns a newly created project as @project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:78

  51) ProjectsController POST #create with valid params redirects to the created project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:84

  52) ProjectsController POST #create with invalid params assigns a newly created but unsaved project as @project
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/projects_controller_spec.rb:91

  53) ProjectsController POST #create with invalid params re-renders the 'new' template
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/projects_controller_spec.rb:96

  54) ProjectsController PUT #update with valid params updates the requested project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:109

  55) ProjectsController PUT #update with valid params assigns the requested project as @project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:116

  56) ProjectsController PUT #update with valid params redirects to the project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:122

  57) ProjectsController PUT #update with invalid params assigns the project as @project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:130

  58) ProjectsController PUT #update with invalid params re-renders the 'edit' template
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:136

  59) ProjectsController DELETE #destroy destroys the requested project
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:145

  60) ProjectsController DELETE #destroy redirects to the projects list
     # Add a hash of attributes valid for your model
     # ./spec/controllers/projects_controller_spec.rb:152

  61) SkillMapsController GET #index assigns all skill_maps as @skill_maps
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:40

  62) SkillMapsController GET #show assigns the requested skill_map as @skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:48

  63) SkillMapsController GET #edit assigns the requested skill_map as @skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:63

  64) SkillMapsController POST #create with valid params creates a new SkillMap
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:72

  65) SkillMapsController POST #create with valid params assigns a newly created skill_map as @skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:78

  66) SkillMapsController POST #create with valid params redirects to the created skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:84

  67) SkillMapsController POST #create with invalid params assigns a newly created but unsaved skill_map as @skill_map
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:91

  68) SkillMapsController POST #create with invalid params re-renders the 'new' template
     # Add a hash of attributes invalid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:96

  69) SkillMapsController PUT #update with valid params updates the requested skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:109

  70) SkillMapsController PUT #update with valid params assigns the requested skill_map as @skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:116

  71) SkillMapsController PUT #update with valid params redirects to the skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:122

  72) SkillMapsController PUT #update with invalid params assigns the skill_map as @skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:130

  73) SkillMapsController PUT #update with invalid params re-renders the 'edit' template
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:136

  74) SkillMapsController DELETE #destroy destroys the requested skill_map
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:145

  75) SkillMapsController DELETE #destroy redirects to the skill_maps list
     # Add a hash of attributes valid for your model
     # ./spec/controllers/skill_maps_controller_spec.rb:152

  76) ClientsHelper add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/helpers/clients_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/clients_helper_spec.rb:14

  77) HomeHelper add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/helpers/home_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/home_helper_spec.rb:14

  78) ProfilesHelper add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/helpers/profiles_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/profiles_helper_spec.rb:14

  79) ProjectMapsHelper add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/helpers/project_maps_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/project_maps_helper_spec.rb:14

  80) ProjectsHelper add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/helpers/projects_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/projects_helper_spec.rb:14

  81) SkillMapsHelper add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/helpers/skill_maps_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/skill_maps_helper_spec.rb:14

  82) Client add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/models/client_spec.rb
     # Not yet implemented
     # ./spec/models/client_spec.rb:4

  83) Designation add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/models/designation_spec.rb
     # Not yet implemented
     # ./spec/models/designation_spec.rb:4

  84) Profile add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/models/profile_spec.rb
     # Not yet implemented
     # ./spec/models/profile_spec.rb:4

  85) ProjectMap add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/models/project_map_spec.rb
     # Not yet implemented
     # ./spec/models/project_map_spec.rb:4

  86) Project add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/models/project_spec.rb
     # Not yet implemented
     # ./spec/models/project_spec.rb:4

  87) SkillMap add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/models/skill_map_spec.rb
     # Not yet implemented
     # ./spec/models/skill_map_spec.rb:4

  88) Skill add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/models/skill_spec.rb
     # Not yet implemented
     # ./spec/models/skill_spec.rb:4

  89) User add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/models/user_spec.rb
     # Not yet implemented
     # ./spec/models/user_spec.rb:4

  90) home/show.html.erb add some examples to (or delete) E:/ruby_assignments/TeamMate/spec/views/home/show.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/home/show.html.erb_spec.rb:4

Failures:

  1) ClientsController GET #new assigns a new client as @client
     Failure/Error: get :new, {}, valid_session

     NoMethodError:
       undefined method `authenticate!' for nil:NilClass
     # ./spec/controllers/clients_controller_spec.rb:57:in `block (3 levels) in <top (required)>'

  2) ProfilesController GET #new assigns a new profile as @profile
     Failure/Error: get :new, {}, valid_session

     NoMethodError:
       undefined method `authenticate!' for nil:NilClass
     # ./spec/controllers/profiles_controller_spec.rb:58:in `block (3 levels) in <top (required)>'

  3) ProjectsController GET #new assigns a new project as @project
     Failure/Error: get :new, {}, valid_session

     NoMethodError:
       undefined method `authenticate!' for nil:NilClass
     # ./spec/controllers/projects_controller_spec.rb:57:in `block (3 levels) in <top (required)>'

  4) Clients GET /clients works! (now write some real specs)
     Failure/Error: expect(response).to have_http_status(200)
       expected the response to have status code 200 but it was 302
     # ./spec/requests/clients_spec.rb:7:in `block (3 levels) in <top (required)>'

  5) Profiles GET /profiles works! (now write some real specs)
     Failure/Error: expect(response).to have_http_status(200)
       expected the response to have status code 200 but it was 302
     # ./spec/requests/profiles_spec.rb:7:in `block (3 levels) in <top (required)>'

  6) ProjectMaps GET /project_maps works! (now write some real specs)
     Failure/Error: <%= stylesheet_link_tag    "application" %>

     ActionView::Template::Error:
       Invalid CSS after "...n_and_overrides": expected "{", was ""
     # (sass):7550
     # ./app/views/layouts/application.html.erb:19:in `_app_views_layouts_application_html_erb__928055697_81759840'
     # ./spec/requests/project_maps_spec.rb:6:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # Sass::SyntaxError:
     #   Invalid CSS after "...n_and_overrides": expected "{", was ""
     #   (sass):7550

  7) Projects GET /projects works! (now write some real specs)
     Failure/Error: expect(response).to have_http_status(200)
       expected the response to have status code 200 but it was 302
     # ./spec/requests/projects_spec.rb:7:in `block (3 levels) in <top (required)>'

  8) SkillMaps GET /skill_maps works! (now write some real specs)
     Failure/Error: <%= stylesheet_link_tag    "application" %>

     ActionView::Template::Error:
       Invalid CSS after "...n_and_overrides": expected "{", was ""
     # (sass):7550
     # ./app/views/layouts/application.html.erb:19:in `_app_views_layouts_application_html_erb__928055697_81759840'
     # ./spec/requests/skill_maps_spec.rb:6:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # Sass::SyntaxError:
     #   Invalid CSS after "...n_and_overrides": expected "{", was ""
     #   (sass):7550

  9) clients/show renders attributes in <p>
     Failure/Error: <%= paginate @project_selected %>

     ActionView::Template::Error:
       undefined method `total_pages' for nil:NilClass
     # ./app/views/projects/_projects.html.erb:7:in `_app_views_projects__projects_html_erb__1748797380_58372200'
     # ./app/views/clients/show.html.erb:18:in `_app_views_clients_show_html_erb__1973840248_58601500'
     # ./spec/views/clients/show.html.erb_spec.rb:12:in `block (2 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NoMethodError:
     #   undefined method `total_pages' for nil:NilClass
     #   ./app/views/projects/_projects.html.erb:7:in `_app_views_projects__projects_html_erb__1748797380_58372200'

  10) profiles/edit renders the edit profile form
      Failure/Error: assert_select "input#profile_user_id[name=?]", "profile[user_id]"

      Minitest::Assertion:
        Expected at least 1 element matching "input#profile_user_id[name="profile[user_id]"]", found 0..
        Expected 0 to be >= 1.
      # ./spec/views/profiles/edit.html.erb_spec.rb:21:in `block (3 levels) in <top (required)>'
      # ./spec/views/profiles/edit.html.erb_spec.rb:19:in `block (2 levels) in <top (required)>'

  11) profiles/index renders a list of profiles
      Failure/Error: <%= search_form_for @profile_search do |f| %>

      ActionView::Template::Error:
        No Ransack::Search object was provided to search_form_for!
      # ./app/views/profiles/index.html.erb:2:in `_app_views_profiles_index_html_erb___786369510_102356680'
      # ./spec/views/profiles/index.html.erb_spec.rb:28:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # ArgumentError:
      #   No Ransack::Search object was provided to search_form_for!
      #   ./app/views/profiles/index.html.erb:2:in `_app_views_profiles_index_html_erb___786369510_102356680'

  12) profiles/new renders new profile form
      Failure/Error: assert_select "input#profile_user_id[name=?]", "profile[user_id]"

      Minitest::Assertion:
        Expected at least 1 element matching "input#profile_user_id[name="profile[user_id]"]", found 0..
        Expected 0 to be >= 1.
      # ./spec/views/profiles/new.html.erb_spec.rb:21:in `block (3 levels) in <top (required)>'
      # ./spec/views/profiles/new.html.erb_spec.rb:19:in `block (2 levels) in <top (required)>'

  13) profiles/show renders attributes in <p>
      Failure/Error: <% if current_user.id==@profile.user_id %>

      ActionView::Template::Error:
        undefined method `authenticate' for nil:NilClass
      # ./app/views/profiles/show.html.erb:26:in `_app_views_profiles_show_html_erb___821664465_102944000'
      # ./spec/views/profiles/show.html.erb_spec.rb:17:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `authenticate' for nil:NilClass
      #   ./app/views/profiles/show.html.erb:26:in `_app_views_profiles_show_html_erb___821664465_102944000'

  14) project_maps/edit renders the edit project_map form
      Failure/Error:
        @project_map = assign(:project_map, ProjectMap.create!(
          :user => nil,
          :project => nil,
          :description => "MyText"
        ))

      ActiveRecord::UnknownAttributeError:
        unknown attribute 'user' for ProjectMap.
      # ./spec/views/project_maps/edit.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `user=' for #<ProjectMap:0x0000000c4891b0>
      #   ./spec/views/project_maps/edit.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'

  15) project_maps/index renders a list of project_maps
      Failure/Error:
        ProjectMap.create!(
          :user => nil,
          :project => nil,
          :description => "MyText"
        ),

      ActiveRecord::UnknownAttributeError:
        unknown attribute 'user' for ProjectMap.
      # ./spec/views/project_maps/index.html.erb_spec.rb:6:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `user=' for #<ProjectMap:0x0000000c49a708>
      #   ./spec/views/project_maps/index.html.erb_spec.rb:6:in `block (2 levels) in <top (required)>'

  16) project_maps/new renders new project_map form
      Failure/Error:
        assign(:project_map, ProjectMap.new(
          :user => nil,
          :project => nil,
          :description => "MyText"
        ))

      ActiveRecord::UnknownAttributeError:
        unknown attribute 'user' for ProjectMap.
      # ./spec/views/project_maps/new.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `user=' for #<ProjectMap:0x0000000c4a8178>
      #   ./spec/views/project_maps/new.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'

  17) project_maps/show renders attributes in <p>
      Failure/Error:
        @project_map = assign(:project_map, ProjectMap.create!(
          :user => nil,
          :project => nil,
          :description => "MyText"
        ))

      ActiveRecord::UnknownAttributeError:
        unknown attribute 'user' for ProjectMap.
      # ./spec/views/project_maps/show.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `user=' for #<ProjectMap:0x0000000c4b9ba8>
      #   ./spec/views/project_maps/show.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'

  18) projects/edit renders the edit project form
      Failure/Error: assert_select "input#project_client_id[name=?]", "project[client_id]"

      Minitest::Assertion:
        Expected at least 1 element matching "input#project_client_id[name="project[client_id]"]", found 0..
        Expected 0 to be >= 1.
      # ./spec/views/projects/edit.html.erb_spec.rb:21:in `block (3 levels) in <top (required)>'
      # ./spec/views/projects/edit.html.erb_spec.rb:15:in `block (2 levels) in <top (required)>'

  19) projects/index renders a list of projects
      Failure/Error: <%= search_form_for @project_search do |f| %>

      ActionView::Template::Error:
        No Ransack::Search object was provided to search_form_for!
      # ./app/views/projects/index.html.erb:2:in `_app_views_projects_index_html_erb___2070909422_103959180'
      # ./spec/views/projects/index.html.erb_spec.rb:20:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # ArgumentError:
      #   No Ransack::Search object was provided to search_form_for!
      #   ./app/views/projects/index.html.erb:2:in `_app_views_projects_index_html_erb___2070909422_103959180'

  20) projects/new renders new project form
      Failure/Error: assert_select "input#project_client_id[name=?]", "project[client_id]"

      Minitest::Assertion:
        Expected at least 1 element matching "input#project_client_id[name="project[client_id]"]", found 0..
        Expected 0 to be >= 1.
      # ./spec/views/projects/new.html.erb_spec.rb:21:in `block (3 levels) in <top (required)>'
      # ./spec/views/projects/new.html.erb_spec.rb:15:in `block (2 levels) in <top (required)>'

  21) projects/show renders attributes in <p>
      Failure/Error: <%= @project.client.name %>

      ActionView::Template::Error:
        undefined method `name' for nil:NilClass
      # ./app/views/projects/show.html.erb:12:in `_app_views_projects_show_html_erb___419969279_104405760'
      # ./spec/views/projects/show.html.erb_spec.rb:13:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `name' for nil:NilClass
      #   ./app/views/projects/show.html.erb:12:in `_app_views_projects_show_html_erb___419969279_104405760'

  22) skill_maps/edit renders the edit skill_map form
      Failure/Error:
        @skill_map = assign(:skill_map, SkillMap.create!(
          :skill => nil,
          :user => "",
          :range => 1
        ))

      ActiveRecord::UnknownAttributeError:
        unknown attribute 'user' for SkillMap.
      # ./spec/views/skill_maps/edit.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `user=' for #<SkillMap:0x0000000c741f38>
      #   ./spec/views/skill_maps/edit.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'

  23) skill_maps/index renders a list of skill_maps
      Failure/Error:
        SkillMap.create!(
          :skill => nil,
          :user => "",
          :range => 1
        ),

      ActiveRecord::UnknownAttributeError:
        unknown attribute 'user' for SkillMap.
      # ./spec/views/skill_maps/index.html.erb_spec.rb:6:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `user=' for #<SkillMap:0x0000000c763a98>
      #   ./spec/views/skill_maps/index.html.erb_spec.rb:6:in `block (2 levels) in <top (required)>'

  24) skill_maps/new renders new skill_map form
      Failure/Error:
        assign(:skill_map, SkillMap.new(
          :skill => nil,
          :user => "",
          :range => 1
        ))

      ActiveRecord::UnknownAttributeError:
        unknown attribute 'user' for SkillMap.
      # ./spec/views/skill_maps/new.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `user=' for #<SkillMap:0x0000000c7812f0>
      #   ./spec/views/skill_maps/new.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'

  25) skill_maps/show renders attributes in <p>
      Failure/Error:
        @skill_map = assign(:skill_map, SkillMap.create!(
          :skill => nil,
          :user => "",
          :range => 1
        ))

      ActiveRecord::UnknownAttributeError:
        unknown attribute 'user' for SkillMap.
      # ./spec/views/skill_maps/show.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'
      # ------------------
      # --- Caused by: ---
      # NoMethodError:
      #   undefined method `user=' for #<SkillMap:0x0000000c792af0>
      #   ./spec/views/skill_maps/show.html.erb_spec.rb:5:in `block (2 levels) in <top (required)>'

Finished in 3.99 seconds (files took 15.09 seconds to load)
161 examples, 25 failures, 90 pending

Failed examples:

rspec ./spec/controllers/clients_controller_spec.rb:56 # ClientsController GET #new assigns a new client as @client
rspec ./spec/controllers/profiles_controller_spec.rb:57 # ProfilesController GET #new assigns a new profile as @profile
rspec ./spec/controllers/projects_controller_spec.rb:56 # ProjectsController GET #new assigns a new project as @project
rspec ./spec/requests/clients_spec.rb:5 # Clients GET /clients works! (now write some real specs)
rspec ./spec/requests/profiles_spec.rb:5 # Profiles GET /profiles works! (now write some real specs)
rspec ./spec/requests/project_maps_spec.rb:5 # ProjectMaps GET /project_maps works! (now write some real specs)
rspec ./spec/requests/projects_spec.rb:5 # Projects GET /projects works! (now write some real specs)
rspec ./spec/requests/skill_maps_spec.rb:5 # SkillMaps GET /skill_maps works! (now write some real specs)
rspec ./spec/views/clients/show.html.erb_spec.rb:11 # clients/show renders attributes in <p>
rspec ./spec/views/profiles/edit.html.erb_spec.rb:16 # profiles/edit renders the edit profile form
rspec ./spec/views/profiles/index.html.erb_spec.rb:27 # profiles/index renders a list of profiles
rspec ./spec/views/profiles/new.html.erb_spec.rb:16 # profiles/new renders new profile form
rspec ./spec/views/profiles/show.html.erb_spec.rb:16 # profiles/show renders attributes in <p>
rspec ./spec/views/project_maps/edit.html.erb_spec.rb:12 # project_maps/edit renders the edit project_map form
rspec ./spec/views/project_maps/index.html.erb_spec.rb:19 # project_maps/index renders a list of project_maps
rspec ./spec/views/project_maps/new.html.erb_spec.rb:12 # project_maps/new renders new project_map form
rspec ./spec/views/project_maps/show.html.erb_spec.rb:12 # project_maps/show renders attributes in <p>
rspec ./spec/views/projects/edit.html.erb_spec.rb:12 # projects/edit renders the edit project form
rspec ./spec/views/projects/index.html.erb_spec.rb:19 # projects/index renders a list of projects
rspec ./spec/views/projects/new.html.erb_spec.rb:12 # projects/new renders new project form
rspec ./spec/views/projects/show.html.erb_spec.rb:12 # projects/show renders attributes in <p>
rspec ./spec/views/skill_maps/edit.html.erb_spec.rb:12 # skill_maps/edit renders the edit skill_map form
rspec ./spec/views/skill_maps/index.html.erb_spec.rb:19 # skill_maps/index renders a list of skill_maps
rspec ./spec/views/skill_maps/new.html.erb_spec.rb:12 # skill_maps/new renders new skill_map form
rspec ./spec/views/skill_maps/show.html.erb_spec.rb:12 # skill_maps/show renders attributes in <p>

C:/Ruby22-x64/bin/ruby.exe -I'C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/rspec-core-3.4.2/lib';'C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/rspec-support-3.4.1/lib' 'C:/Ruby22-x64/lib/ruby/gems/2.2.0/gems/rspec-core-3.4.2/exe/rspec' --pattern 'spec/**{,/*/**}/*_spec.rb'
